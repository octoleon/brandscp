- values = @neighborhoods.map(&:attendees)
- if @neighborhoods.count == 0
  | 
    $('#attendance-map-canvas').hide();
    $('.export-xls').hide();
- else 
  |
    $('#attendance-map-canvas').show();
    var arrayPolygon = [],
        color = '#{default_color}',
        valueMin = #{values.min || 0},
        valueMax = #{values.max || 0},
        selectedMin = valueMin,
        selectedMax =valueMax,
        showTootltip = function showTootltip(event, infoWindow) {
          infoWindow.setPosition(event.latLng);
          infoWindow.open(window.attendanceMap);
        },
        initializeNeighborhoodMap = function initializeMap() {
          var mapOptions = {
                zoom: 5,
                center: new google.maps.LatLng(24.886436490787712, -70.2685546875),
                mapTypeId: google.maps.MapTypeId.TERRAIN
              },
              bounds = new google.maps.LatLngBounds(),
              neighborhoodsCoordinates, 
              i,
              neighborhoodPolygon,
              infoWindows = {};

            window.attendanceMap = new google.maps.Map(document.getElementById('attendance-map-canvas'), mapOptions);
            window.attendanceMap.setOptions({styles: window.MAP_STYLES});


  - @neighborhoods.each do |neighborhood|
    |
          infoWindows["#{j neighborhood.name}"] = new google.maps.InfoWindow();
          infoWindows["#{j neighborhood.name}"].setContent('#{j neighborhood_tooltip(neighborhood)}');
          neighborhoodsCoordinates = [#{neighborhood_coordinates(neighborhood)}];
          neighborhoodPolygon = new google.maps.Polygon({
            paths: neighborhoodsCoordinates,
            strokeColor: '#347B9B',
            strokeOpacity: 0.8,
            strokeWeight: 2,
          });

          arrayPolygon.push({
            polygon: neighborhoodPolygon,
            quantity: #{neighborhood.attendees}
          });

          neighborhoodPolygon.setMap(window.attendanceMap);

          google.maps.event.addListener(neighborhoodPolygon, 'click', function(event) { showTootltip(event, infoWindows["#{j neighborhood.name}"]) });
          
          for (i = 0; i < neighborhoodsCoordinates.length; i++) {
            bounds.extend(neighborhoodsCoordinates[i]);
          };
  |
        window.attendanceMap.fitBounds(bounds);
        };
        initializeNeighborhoodMap();
        changeColorAllPolygon(color, tinycolor(color).toHsv());
        $('#customize-fields').removeClass('hide');
        $('#attendees-range-slider').rangeSlider('bounds', valueMin, valueMax);
        $('#attendees-range-slider').rangeSlider('values', valueMin, valueMax);
        $('#attendees-range-slider').rangeSlider('min', valueMin);
        $('#attendees-range-slider').rangeSlider('max', valueMax);
        $('#attendees-range-slider').rangeSlider('resize');
        $('.export-xls').show();
